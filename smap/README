This tar file contains a version of the Smap server.  You can run upgrade an existing installation or install 
a fresh installation.  The latter will delete your existing data. Hence if you have already installed Smap Server
only do an upgrade.

Upgrading
----------
Deploy a new version of Smap.  If you have already installed smap you can update it with the new
version.  Your existing data will not be affected.

It would be a good idea to 

  1. Backup your database before upgrading
  2. Stop Apache so that there are no uploads happening during the upgrade
  
cd ~/smap/deploy
sudo ./patchdb.sh
sudo ./deploy.sh

Version 14.10.02 needs the following added to /etc/apache2/sites-available/default-ssl.conf (Assuming version 2.4 of Apache)
Add after the <location /surveyKPI> entry

	<Location /surveyKPI/onetimelogon>
		Require all granted
	</Location>

Also update 000-default.conf to 
	redirect /resetPassword.html to https
	redirect /forgottenPassword.html to https
Use the existing redirect statements as a template

If you are going to allow the server to send emails in order to reset passwords then you will need to
set up an email server, or gain access to one, and then update /var/lib/tomcat7/conf/web.xml to add the following:
		<context-param>
		   <param-name>au.com.smap.smtp_on</param-name>
		   <param-value>true</param-value>
		</context-param>
		
		<context-param>
		   <param-name>au.com.smap.smtp_host</param-name>
		   <param-value>{your smtp host}</param-value>
		</context-param>
		
		<context-param>
		   <param-name>au.com.smap.password_reset_from</param-name>
		   <param-value>{an email address to use in the from: section of a password reset}</param-value>
		</context-param>
These parameters should be added just before the final "</web-app>"

Version 14.10 needs the following added to Apache configuration files (Assuming version 2.4 of Apache)

    ProxyPass         /formXMLLocal ajp://localhost:8009/surveyMobileAPI/formXML
    ProxyPassReverse  /formXMLLocal ajp://localhost:8009/surveyMobileAPI/formXML
    ProxyPass         /instanceXMLLocal ajp://localhost:8009/surveyMobileAPI/instanceXML
    ProxyPassReverse  /instanceXMLLocal ajp://localhost:8009/surveyMobileAPI/instanceXML

# Local access points for webforms
    <Location /formXMLLocal>
       	Require ip  127.0.0.1
	</Location>

	<Location /instanceXMLLocal>
    	Require ip  127.0.0.1
	</Location>


Installation
------------

WARNING.  This will do a clean install and will delete all your existing data!  The install will also modify configuration 
files for apache, tomcat and postgres.  The assumption is that you are installing on a new Ubuntu version possibly
running as a virtual machine.  If you want to install on an existing server that already has Apache, Tomcat or Postgres 
then you may want to do a manual installation following the steps in the install.sh file as a guide.  You can also
do this if you are running a different flavour of linux.  If you want to update the install script to support your
linux version then I can add those updates to the source code.

If you want to install on Windows then you will have to proceed with a manual installation. Smap Server hasn't been
tested on Windows in several years so there are likely to be some issues. 

Smap installation is performed by running the install.sh script.  
After running the script the steps described in Post Install Configuration will need to be performed
	

Pre-requisites / assumptions:
	1. Ubuntu server. Testing has been done with Versions 12.04 and 14.04
	2. Hardware (minimum)
		2 GB of memory
		1 CPU
		20 GB of disk
	3. Apache 2.2 / 2.4, Tomcat 7, Postgres 9.3 and Postgis 2.1, openjdk 7 will be installed from Ubuntu sources or updated if they are already installed

##### Installing
	1. Logon as a user other than root 
	2. Run the install script
		./install.sh
		
To logon to smap:
	user: admin
	password: admin
	
You should change the above password as soon as possible.

##### Set up Backups
	1. Create a file called "passwordfile" in the postgres home directory owned by postgres
	2. The file should contain the password used to encrypt backups.  A copy of this password needs to be kept
	   in a safe place.
	3. As postgres type "crontab -e" and add the following line to the end of the file:
			44 19 * * * /var/lib/postgresql/bu.sh >> /var/lib/postgresql/cron.log 2 >&1
	4. You will need to organsise for the backup *.gpg file to be copied to an offsite location each time it is created

